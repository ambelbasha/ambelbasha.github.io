/* General body styles */
body {
    margin: 0px;
    padding: 0px;
    background: linear-gradient(to bottom right, #383737, #000, #9c9c9c); /* Diagonal gradient background */
    height: 100vh;
    overflow: hidden;
    position: relative;
}

.hex-container {
    position: relative;
    width: calc(100vw + 82px); /* Adjusted width to cover the entire viewport */
    height: calc(100vh + 150px); /* Adjusted height to cover the empty space at the bottom */
    overflow: hidden;
    perspective: 1000px; /* Perspective for 3D effect */
    transform: translateY(-77px) translateX(-82px); /* Shift scene up and left */
}

/* Base hexagon styles */
.hexagon {
    position: absolute;
    width: 154px; /* Enlarged size of each hexagon (150px + 2px left + 2px right) */
    height: 170.5px; /* Adjusted height for better coverage */
    background: linear-gradient(to top, #666666, #ffffff); /* Gradient for dark grey to light grey */
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    transform-style: preserve-3d;
    transform: rotate(90deg); /* Rotate hexagon by 90 degrees */
    border: 2px solid rgba(0, 0, 0, 0.3); /* Adjusted border color */
    margin: 0 2px; /* Add 2 pixels of margin on both sides */
    box-sizing: border-box; /* Ensure border-box sizing */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effect */
    box-shadow:
        0 5px 15px rgba(0, 0, 0, 0.2), /* Base shadow */
        0 5px 10px rgba(0, 0, 0, 0.2); /* Soft shadow */
    overflow: hidden; /* Hide overflow to clip glossy effect */
}

/* Hexagon pseudo-elements */
.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: inherit;
    height: inherit;
    background-color: inherit;
    clip-path: inherit;
    transform-style: preserve-3d;
}

/* Extend white shiny effect over hexagons */
.hexagon::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0)); /* Gradient for diagonal light shade */
    clip-path: polygon(
        0% 0%,
        100% 0%,
        0% 100% /* Updated to start from top left to bottom right */
    );
    transform-style: preserve-3d;
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    opacity: 0.7; /* Adjust opacity for subtle shine effect */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(255, 255, 255, 0.9), /* Base shine */
        inset 5px 5px 10px rgba(255, 255, 255, 0.7); /* Soft shine */
}

/* Hover effect on hexagons */
.hexagon:hover::before {
    opacity: 1; /* Fully visible shine on hover */
}

.hexagon:hover {
    transform: rotate(0deg) scale(1.05); /* Rotate and slightly scale up hexagon */
    box-shadow:
        0 10px 30px rgba(0, 0, 0, 0.5), /* Increased shadow */
        0 10px 20px rgba(0, 0, 0, 0.4); /* Soft shadow */
}

.bottom-banner {
    position: absolute;
    bottom: 20px; /* Adjusted distance from bottom */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%);
    padding: 20px 40px; /* Increased padding for banner */
    background: linear-gradient(to bottom right, #000, #555555); /* Gradient background for banner */
    color: #fff; /* Text color */
    font-family: 'Arial', sans-serif; /* Font family */
    font-size: 24px; /* Adjusted font size */
    font-weight: bold; /* Bold text */
    text-align: center; /* Center text */
    border-radius: 5px; /* Rounded corners */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); /* Soft shadow for depth */
    transition: background 0.3s ease-in-out; /* Smooth transition for background */
}

.bottom-banner:hover {
    background: linear-gradient(to bottom right, #222222, #888888); /* Lighter gradient on hover */
}

/* Specific styles for top, bottom, left, and right hexagons */
.hexagon.top-left {
    background: linear-gradient(to top right, #444444, #070707); /* Dark grey to light grey */
}

.hexagon.top-right {
    background: linear-gradient(to top left, #b98f05, #ce0101); /* Dark grey to light grey */
}

.hexagon.bottom-left {
    background: linear-gradient(to bottom right, #ffffff, #020202); /* Dark grey to light grey */
}

.hexagon.bottom-right {
    background: linear-gradient(to bottom left, #0a0a0a, #ffffff); /* Dark grey to light grey */
}

.hexagon.top {
    background: linear-gradient(to top, #444444, #ffffff); /* Dark grey to light grey */
}

.hexagon.bottom {
    background: linear-gradient(to bottom, #ffffff, #ffffff); /* Dark grey to light grey */
}

.hexagon.left {
    background: linear-gradient(to left, #000000, #131212); /* Dark grey to light grey */
}

.hexagon.right {
    background: linear-gradient(to right, #444444, #ffffff); /* Dark grey to light grey */
}

/* Different styles for hexagons based on their position */
.hexagon:nth-child(2n+1) {
    background: linear-gradient(to right, #0f0f0f, #000); /* Light to dark gradient */
    box-shadow:
        0 10px 25px rgba(0, 0, 0, 0.3), /* Stronger shadow from top right */
        0 10px 15px rgba(0, 0, 0, 0.3); /* Lighter shadow on left */
}

.hexagon:nth-child(3n+2) {
    background: linear-gradient(to right, #080808, #070707); /* Light to dark gradient */
    box-shadow:
        0 15px 30px rgba(0, 0, 0, 0.4), /* Stronger shadow from top right */
        0 15px 20px rgba(0, 0, 0, 0.4); /* Lighter shadow on left */
}

.hexagon:nth-child(4n+3) {
    background: linear-gradient(to right, #161616, #ffffff); /* Light to dark gradient */
    box-shadow:
        0 5px 15px rgba(0, 0, 0, 0.2), /* Stronger shadow from top right */
        0 5px 10px rgba(0, 0, 0, 0.2); /* Lighter shadow on left */
}

.hexagon:nth-child(5n+4) {
    background: linear-gradient(to right, #0f0f0f, #141414); /* Light to dark gradient */
    box-shadow:
        0 10px 25px rgba(0, 0, 0, 0.3), /* Stronger shadow from top right */
        0 10px 15px rgba(0, 0, 0, 0.3); /* Lighter shadow on left */
}

.hexagon:nth-child(6n+5) {
    background: linear-gradient(to right, #000000, #181616); /* Light to dark gradient */
    box-shadow:
        0 15px 30px rgba(0, 0, 0, 0.4), /* Stronger shadow from top right */
        0 15px 20px rgba(0, 0, 0, 0.4); /* Lighter shadow on left */
}

.hexagon:nth-child(7n+6) {
    background: linear-gradient(to right, #1d1d1d, #0e0d0d); /* Light to dark gradient */
    box-shadow:
        0 5px 15px rgba(0, 0, 0, 0.2), /* Stronger shadow from top right */
        0 5px 10px rgba(0, 0, 0, 0.2); /* Lighter shadow on left */
}

.hexagon:nth-child(8n+7) {
    background: linear-gradient(to right, #020202, #ffffff); /* Light to dark gradient */
    box-shadow:
        0 10px 20px rgba(0, 0, 0, 0.3), /* Stronger shadow from top right */
        0 10px 15px rgba(0, 0, 0, 0.3); /* Lighter shadow on left */
}

.hexagon:nth-child(9n+8) {
    background: linear-gradient(to right, #101010, #1c1c1c); /* Light to dark gradient */
    box-shadow:
        0 15px 25px rgba(255, 255, 255, 0.4), /* Stronger shadow from top right */
        0 15px 20px rgba(0, 0, 0, 0.4); /* Lighter shadow on left */
}

.hexagon:nth-child(10n+9) {
    background: linear-gradient(to right, #cfcece, #000000); /* Light to dark gradient */
    box-shadow:
        0 10px 20px rgba(0, 0, 0, 0.3), /* Stronger shadow from top right */
        0 10px 15px rgba(0, 0, 0, 0.3); /* Lighter shadow on left */
}

/* Add more styles as needed */
.hexagon:nth-child(11n+10) {
    background: linear-gradient(to right, #d4d0d0, #202020); /* Light to dark gradient */
    box-shadow:
        0 12px 22px rgba(0, 0, 0, 0.3), /* Custom shadow */
        0 12px 16px rgba(0, 0, 0, 0.3); /* Custom shadow */
}

.hexagon:nth-child(12n+11) {
    background: linear-gradient(to right, #ffffff, #232323); /* Light to dark gradient */
    box-shadow:
        0 15px 25px rgba(255, 252, 252, 0.35), /* Custom shadow */
        0 15px 20px rgba(0, 0, 0, 0.35); /* Custom shadow */
}

.hexagon:nth-child(13n+12) {
    background: linear-gradient(to right, #111111, #000000); /* Light to dark gradient */
    box-shadow:
        0 18px 28px rgba(0, 0, 0, 0.4), /* Custom shadow */
        0 18px 23px rgba(0, 0, 0, 0.4); /* Custom shadow */
}

.hexagon:nth-child(14n+13) {
    background: linear-gradient(to right, #d8d6d6, #050505); /* Light to dark gradient */
    box-shadow:
        0 20px 30px rgba(0, 0, 0, 0.4), /* Custom shadow */
        0 20px 25px rgba(156, 156, 156, 0.4); /* Custom shadow */
}

.hexagon:nth-child(15n+14) {
    background: linear-gradient(to right, #030303, #676767); /* Light to dark gradient */
    box-shadow:
        0 22px 32px rgba(0, 0, 0, 0.45), /* Custom shadow */
        0 22px 27px rgba(0, 0, 0, 0.45); /* Custom shadow */
}

/* Glass effect for hexagons */
.hexagon.glass {
    position: relative; /* Ensure relative positioning for pseudo-element */
    background: rgba(0, 0, 0, 0.6); /* Darker semi-transparent background for base */
    border: none; /* No border for glass hexagons */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effect */
    overflow: hidden; /* Ensure contents don't overflow */
}

/* Add the glass effect overlay */
.hexagon.glass::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        to bottom right, 
        rgba(255, 255, 255, 0.6), /* Darker black */
        rgba(255, 255, 255, 0.8) 50%, 
        rgba(0, 0, 0, 0.4) 50%, 
        rgba(226, 222, 222, 0.9) /* Slightly lighter black */
    ); /* Darker black gradient for glass effect */
    clip-path: polygon(
        50% 0%, 
        100% 25%, 
        100% 75%, 
        50% 100%, 
        0% 75%, 
        0% 25%
    ); /* Match the hexagon shape */
    opacity: 0.4; /* Adjust transparency for more pronounced effect */
    transform: rotate(0deg) scale(1.05); /* Slight rotation and scaling for effect */
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(3, 9, 36, 0.8), /* Darker black inset shadow */
        inset 5px 5px 10px rgba(255, 255, 255, 0.7), /* Darker inset shadow */
        0px 0px 8px rgba(0, 0, 0, 0.5); /* Soft highlight */
}

/* Hexagon pseudo-elements */
.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: inherit;
    height: inherit;
    background-color: inherit;
    clip-path: inherit;
    transform-style: preserve-3d;
}

/* Extend white shiny effect over hexagons */
.hexagon::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0)); /* Slightly lighter gradient for shine */
    clip-path: polygon(
        0% 0%,
        100% 0%,
        0% 100%
    );
    transform-style: preserve-3d;
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    opacity: 0.5; /* Adjust opacity for subtle shine effect */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(255, 255, 255, 0.8), /* Slightly lighter white inset shadow */
        inset 5px 5px 10px rgba(255, 255, 255, 0.9), /* Black inset shadow */
        0px 0px 8px rgba(255, 255, 255, 0.7); /* Soft highlight */
}

/* Hover effect on hexagons with glass effect */
.hexagon.glass:hover::before {
    opacity: 0.5; /* Increase opacity on hover */
    transform: rotate(0deg) scale(1.1); /* Slightly larger on hover for better effect */
}

.hexagon.glass:hover {
    box-shadow:
        0 10px 25px rgba(0, 0, 0, 0.5), /* Increased shadow on hover */
        0 10px 20px rgba(0, 0, 0, 0.4); /* Lighter shadow */
}

/* Animated background hexagons */
@keyframes slide-background {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: -100% -100%;
    }
}


.banner {
    position: absolute; /* Position the banner absolutely */
    top: 30px; /* Adjusted top position */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for centering */
    padding: 10px 26px; /* Padding for the banner */
    background: 
        linear-gradient(to bottom, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.3)), /* Pale top and bottom */
        linear-gradient(to right, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.9)), /* Cylindrical effect gradient */
        radial-gradient(circle at center, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.2) 70%); /* Shine effect */
    box-shadow: 
        0 8px 16px rgba(0, 0, 0, 0.2), /* Main shadow */
        inset 0 4px 8px rgba(255, 255, 255, 0.6), /* Inner top highlight */
        inset 0 -4px 8px rgba(0, 0, 0, 0.2), /* Inner bottom shadow */
        0 4px 8px rgba(0, 0, 0, 0.1), /* Outer shadow */
        0 0 0 1px rgba(255, 255, 255, 0.6), /* Light outer border */
        inset -2px 0 6px rgba(0, 0, 0, 0.2), /* Left inner shadow */
        inset 2px 0 6px rgba(0, 0, 0, 0.2), /* Right inner shadow */
        inset 0 -2px 6px rgba(0, 0, 0, 0.1), /* Bottom inner shadow */
        inset 0 2px 6px rgba(0, 0, 0, 0.1); /* Top inner shadow */
    border-radius: 50px; /* Slightly rounded edges */
    font-size: 20px; /* Adjusted font size */
    font-weight: bold; /* Bold font weight */
    color: #2d2d2d; /* Dark color */
    z-index: 10; /* Ensure banner is above other elements */
    text-shadow: 0 1px 1px rgba(255, 255, 255, 0.7); /* Light shadow for text */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effect */
    backdrop-filter: blur(10px); /* Slightly blurred background */
}

.banner:hover {
    background: 
        linear-gradient(to bottom, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.2)), /* Light top and bottom */
        linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.8)), /* Cylindrical effect gradient */
        radial-gradient(circle at center, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.3) 70%); /* Shine effect */
    box-shadow: 
        0 12px 24px rgba(0, 0, 0, 0.2), /* Stronger main shadow */
        inset 0 6px 12px rgba(255, 255, 255, 0.6), /* Stronger top highlight */
        inset 0 -6px 12px rgba(0, 0, 0, 0.2), /* Stronger bottom shadow */
        0 6px 12px rgba(0, 0, 0, 0.1), /* Outer shadow */
        0 0 0 1px rgba(255, 255, 255, 0.6), /* Light outer border */
        inset -2px 0 12px rgba(0, 0, 0, 0.2), /* Left inner shadow */
        inset 2px 0 12px rgba(0, 0, 0, 0.2), /* Right inner shadow */
        inset 0 -2px 12px rgba(0, 0, 0, 0.1), /* Bottom inner shadow */
        inset 0 2px 12px rgba(0, 0, 0, 0.1); /* Top inner shadow */
}

/* Media query for smaller screens */
@media (max-width: 768px) {
    .container {
        width: 280px; /* Adjusted width for smaller screens */
        height: 340px; /* Adjusted height for smaller screens */
    }
}
/* Outer container styles */
.outer-container {
    position: relative;
    width: 620px;
    height: 620px;
    margin: 26px auto;
    top: -66.7%;
    left:8px;
    transform: translateY(-49.7%);
    transform-origin: top left;
    /* border: 1px solid rgb(69, 245, 0); */
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 320px;
}

/* Container styles */
.container {
    width: 314px; /* Further reduced width */
    height: 398px; /* Further reduced height */
    display: flex;
    flex-wrap: wrap;
    padding: 120px; /* Added padding */
    justify-content: center;
    align-items: center;
    gap: 12px; /* Reduced the gap between hexagons horizontally */
    position: relative;
    z-index: 1;
    text-align: center;
    background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0)
    ),
    linear-gradient(to left, rgba(255, 255, 255, 0.2), rgba(179, 180, 179, 0));
    background-blend-mode: lighten;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1),
    0 1px 3px rgba(0, 0, 0, 0.08);
    border-radius: 25px;
    overflow: hidden;
    transform: rotate(90deg); /* Rotate the hexagonal grid */
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    /* border: 1px solid rgb(69, 245, 0); For debugging reasons */
}

/* Adjusted hexagonal frame */
.hexagonal-frame {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 0px; /* Adjusted horizontal gap between hexagons */
    margin: 0 auto;
    position: relative;
    z-index: 1;
    top: 0;
    transform: rotate(90deg);
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
   /* border: 1px solid white; /* White border around hexagonal frame */
}

/* Adjusted row styles */
.row {
    display: flex;
    justify-content: center;
    gap: 1.1px; /* Reduced horizontal gap between hexagons within a row */
    margin-top: -9px; /* Ensure no additional margin top */
    margin-left: -5px;
}
/* Reduce bottom margin for hexagons in the first row */
.row:not(.second-row) .hex {
    margin-bottom: -30; /* Remove bottom margin */
}

/* Reduce top margin for hexagons in the second row */
.row.second-row .hex {
    margin-top: -100; /* Remove top margin */
    margin-bottom: 13px; /* Adjusted bottom margin */
}

/* Adjust the margin between elements in the first row */
.row:not(.second-row) .hex + .hex {
    margin-left: 9px; /* Adjust the left margin between elements */
}
/* Hexagon styles */
.hex {
    width: 122px;
    height: 146px; /* Adjusted height to reduce vertical spacing */
    background-color: #6c6;
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    padding: 12px; /* Adjust padding as needed */
    outline: 5px solid white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    will-change: transform, box-shadow;
    z-index: 3;
    position: relative; /* Ensure positioning context for absolute positioning */
    overflow: hidden; /* Hide overflow to prevent text from spilling */
    margin-left: -2px; /* Shift each hexagon 12px to the right */
    margin-bottom: -24px;
    margin-top: -16px;
}

/* Hexagon anchor styles */
.hex a {
    color: #fff;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 12px;
    font-weight: bold;
    text-align: center;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    transform: rotate(-90deg); /* Rotate the text */
    position: absolute; /* Position relative to .hex */
    width: 100%; /* Ensure full width of .hex for text */
    transform-origin: center center; /* Rotate around the center */
}

/* Hexagon hover effect */
.hex:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    background-color: rgba(255, 215, 0, 0.8);
}

/* Text color change on hover */
.hex:hover a {
    color: black; /* Change text color to black on hover */
}

/* Hexagon expanded state */
.hex.expanded {
    transform: scale(1.2);
}
/* Triangle at the bottom of the container */
.triangle {
    position: absolute;
    top:109%;
    bottom: 0; /* Position at the bottom */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for horizontal centering */
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #ffffff; /* White triangle pointing downward */
    z-index: 2; /* Ensure it’s on top */
}

/* Overlay to extend the hover area */
.triangle-overlay {
    position: absolute;
    bottom: -20px; /* Extend below the triangle */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for horizontal centering */
    width: 40px; /* Extend size to cover padding area */
    height: 40px; /* Extend size to cover padding area */
    z-index: 1; /* Ensure it’s below the triangle but still covers the hover area */
}

/* Show footer when either the triangle or its overlay is hovered */
.outer-container:hover .footer,
.triangle:hover ~ .footer,
.triangle-overlay:hover ~ .footer {
    opacity: 1; /* Show footer */
}
.footer {
    position: fixed; /* Fixed positioning */
    bottom: 0; /* Positioned at bottom */
    left: 2px; /* Positioned at left */
    right: 2px; /* Positioned at right */
    width: calc(100% - 4px); /* Full width minus left and right offsets */
    height: 36px; /* Height of footer */
    background-color: rgba(32, 32, 32, 0.8); /* Background color */
    display: flex; /* Use flexbox for layout */
    justify-content: center; /* Center content horizontally */
    align-items: center; /* Center content vertically */
    opacity: 0; /* Initially transparent */
    transition: opacity 0.3s ease; /* Smooth transition for opacity */
    border-bottom: 1px solid #000; /* Thin bottom border */
    border-left: 1px solid #000; /* Thin left border */
    border-right: 1px solid #000; /* Thin right border */
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
    z-index: 1; /* Ensure it's above the pseudo-element */
    box-sizing: border-box; /* Include border in the element's dimensions */
    overflow: hidden; /* Ensure pseudo-element doesn't overflow */
}

.footer::before {
    content: '';
    position: absolute;
    bottom: -1px; /* Adjusted to align perfectly */
    left: 0; /* Ensure it matches the footer's left position */
    right: 0; /* Ensure it matches the footer's right position */
    width: 100%; /* Full width */
    height: 38px; /* Slightly larger to accommodate border */
    background: rgba(0, 0, 0, 1); /* Ensure the border color matches */
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
    z-index: -1; /* Ensure it is behind the footer */
    box-sizing: border-box; /* Include border in the element's dimensions */
}

.footer.visible {
    opacity: 1; /* Visible state */
}

.glossy-line::before,
.glossy-line::after {
    content: ""; /* Empty content */
    position: absolute; /* Absolute positioning */
    top: 0; /* Positioned at top */
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    pointer-events: none; /* No pointer events */
    transition: width 0.3s ease; /* Smooth transition for width */
}

.glossy-line::before {
    left: 0; /* Positioned at left */
    background: linear-gradient(to left bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0)); /* Gradient from left */
    transition-delay: 0.15s; /* Delay for transition */
}

.glossy-line::after {
    right: 0; /* Positioned at right */
    background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0)); /* Gradient from right */
    transition-delay: 0.15s; /* Delay for transition */
}

/* List styles inside footer */
.footer ul {
    list-style: none; /* Remove default list style */
    padding: 10px; /* Remove padding */
    margin: 18px; /* Remove margin */
}

.footer ul li {
    display: inline; /* Display inline */
    margin: 0 5px; /* Margin around list items */
}

.footer ul li a {
    text-decoration: none; /* Remove underline */
    color: #fff; /* Text color */
    font-size: 14px; /* Font size */
    transition: color 0.3s ease; /* Smooth transition for text color */
}

.footer ul li a:hover {
    color: #e79303 !important; /* Text color on hover */
}

/* Error message styles */
.error-message {
    display: inline-block;
    padding: 10px 20px;
    background-color: #f44336; /* Red background for visibility */
    border: 1px solid #bb160a;
    color: white; /* White text */
    position: fixed; /* Position fixed to handle layout properly */
    top: 50%; /* Vertically center */
    left: 50%; /* Horizontally center */
    transform: translate(-50%, -50%) rotate(-90deg); /* Center the element and rotate */
    z-index: 1000; /* Ensure it appears on top */
    border-radius: 5px; /* Optional: Rounded corners */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Subtle shadow for better visibility */
    opacity: 0.9;
}
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1000; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: hidden; /* Prevent scrollbars */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    opacity: 0; /* Start as invisible */
    transition: opacity 0.5s ease-in-out; /* Transition effect */
}

.modal-content {
    background-color: #fefefe;
    margin: 20% auto; /* Center content horizontally and 20% from the top */
    padding: 20px;
    border: 1px solid #050505;
    border-radius: 16px;
    width: 26%; /* Could be more or less, depending on screen size */
    opacity: 1; /* Make sure content is visible */
}

/* Optionally, prevent body scroll when modal is open */
body.modal-open {
    overflow: hidden; /* Disable body scrolling */
}

button {
    padding: 8px 16px;
    margin: 8px;
    font-size: 16px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
    background-color: #09a81e;
    color: white;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #077b13; /* Darker shade on hover */
}

button:active {
    background-color: #065d0f; /* Even darker shade on click */
}

/*
    Button Styles
    .button {
        margin: 5px;
        padding: 10px 20px;
        cursor: pointer;
        border: none; Remove default border 
        border-radius: 5px; Rounded corners for buttons 
        font-size: 16px; Font size *
    }

    .button.redirectButton {
        background: #09a81e; Green background 
    }

    .button.openNewButton {
        background: #e73103; /* Red background *
    }

    .button.closeButton {
        background: #ffffff; /* White background 
        color: #000000; /* Change text color for contrast 
    }
*/
