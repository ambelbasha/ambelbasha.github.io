/* General body styles */
body {
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom right, #003135, #001f21, #00565c); /* Refined gradient within dark cyan/teal spectrum */
    height: 100vh;
    overflow: hidden;
    position: relative;
}

.hex-container {
    position: relative;
    width: calc(100vw + 82px); /* Adjusted width to cover the entire viewport */
    height: calc(100vh + 150px); /* Adjusted height to cover the empty space at the bottom */
    overflow: hidden;
    perspective: 1000px; /* Perspective for 3D effect */
    transform: translateY(-160px) translateX(-84px); /* Increase Y shift to move it further up */
}

.hexagon {
    position: absolute;
    width: 154px;
    height: 170.5px;
    background: linear-gradient(to top, #666666, #ffffff);
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    transform-style: preserve-3d;
    transform: rotate(90deg); /* Rotate hexagon by 90 degrees */
    border: 2px solid rgba(0, 0, 0, 0.3);
    margin: 1px 2px;
    box-sizing: border-box;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}
/*
Center the number inside the hexagon without rotation 
.hexagon-number {
    font-size: 16px;
    color: #000000;
    transform: rotate(-90deg); /* Counteract the 90-degree rotation of the hexagon 
}
*/

/* Hexagon pseudo-elements */
.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: inherit;
    height: inherit;
    background-color: inherit;
    clip-path: inherit;
    transform-style: preserve-3d;
}

/* Extend white shiny effect over hexagons */
.hexagon::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0)); /* Gradient for diagonal light shade */
    clip-path: polygon(
        0% 0%,
        100% 0%,
        0% 100% /* Updated to start from top left to bottom right */
    );
    transform-style: preserve-3d;
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    opacity: 0.7; /* Adjust opacity for subtle shine effect */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(255, 255, 255, 0.9), /* Base shine */
        inset 5px 5px 10px rgba(255, 255, 255, 0.7); /* Soft shine */
}

/* Hover effect on hexagons */
.hexagon:hover::before {
    opacity: 1; /* Fully visible shine on hover */
}

.hexagon:hover {
    transform: rotate(0deg) scale(1.05); /* Rotate and slightly scale up hexagon */
    box-shadow:
        0 10px 30px rgba(0, 0, 0, 0.5), /* Increased shadow */
        0 10px 20px rgba(0, 0, 0, 0.4); /* Soft shadow */
}

/* Glass effect for hexagons */
.hexagon.glass {
    position: relative; /* Ensure relative positioning for pseudo-element */
    background: rgba(0, 0, 0, 0.6); /* Darker semi-transparent background for base */
    border: none; /* No border for glass hexagons */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effect */
    overflow: hidden; /* Ensure contents don't overflow */
}

/* Add the glass effect overlay */
.hexagon.glass::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        to bottom right, 
        rgba(255, 255, 255, 0.6), /* Darker black */
        rgba(255, 255, 255, 0.8) 50%, 
        rgba(0, 0, 0, 0.4) 50%, 
        rgba(226, 222, 222, 0.9) /* Slightly lighter black */
    ); /* Darker black gradient for glass effect */
    clip-path: polygon(
        50% 0%, 
        100% 25%, 
        100% 75%, 
        50% 100%, 
        0% 75%, 
        0% 25%
    ); /* Match the hexagon shape */
    opacity: 0.4; /* Adjust transparency for more pronounced effect */
    transform: rotate(0deg) scale(1.05); /* Slight rotation and scaling for effect */
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(3, 9, 36, 0.8), /* Darker black inset shadow */
        inset 5px 5px 10px rgba(255, 255, 255, 0.7), /* Darker inset shadow */
        0px 0px 8px rgba(0, 0, 0, 0.5); /* Soft highlight */
}

/* Hexagon pseudo-elements */
.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: inherit;
    height: inherit;
    background-color: inherit;
    clip-path: inherit;
    transform-style: preserve-3d;
}

/* Extend white shiny effect over hexagons */
.hexagon::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0)); /* Slightly lighter gradient for shine */
    clip-path: polygon(
        0% 0%,
        100% 0%,
        0% 100%
    );
    transform-style: preserve-3d;
    z-index: 1; /* Ensure it's above the hexagon */
    pointer-events: none; /* Ignore pointer events on this pseudo-element */
    opacity: 0.5; /* Adjust opacity for subtle shine effect */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for shine effect */
    box-shadow:
        inset -5px -5px 10px rgba(255, 255, 255, 0.8), /* Slightly lighter white inset shadow */
        inset 5px 5px 10px rgba(255, 255, 255, 0.9), /* Black inset shadow */
        0px 0px 8px rgba(255, 255, 255, 0.7); /* Soft highlight */
}

/* Hover effect on hexagons with glass effect */
.hexagon.glass:hover::before {
    opacity: 0.9; /* Increase opacity on hover */
    transform: rotate(0deg) scale(1.1); /* Slightly larger on hover for better effect */
}

.hexagon.glass:hover {
    box-shadow:
        0 10px 25px rgba(0, 0, 0, 0.5), /* Increased shadow on hover */
        0 10px 20px rgba(0, 0, 0, 0.4); /* Lighter shadow */
}

/* Animated background hexagons */
@keyframes slide-background {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: -100% -100%;
    }
}

/* Media query for smaller screens */
@media (max-width: 768px) {
    .container {
        width: 280px; /* Adjusted width for smaller screens */
        height: 340px; /* Adjusted height for smaller screens */
    }
}
/* Outer container styles */
.outer-container {
    position: relative;
    width: 620px;
    height: 620px;
    margin: 26px auto;
    top: -69.95%;
    left:-11.5px;
    transform: translateY(-49.6%);
    transform-origin: top left;
    /* border: 1px solid rgb(69, 245, 0); */
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 320px;
}

/* Container styles */
.container {
    width: 314px; /* Further reduced width */
    height: 398px; /* Further reduced height */
    display: flex;
    flex-wrap: wrap;
    padding: 120px; /* Added padding */
    justify-content: center;
    align-items: center;
    gap: 11px; /* Reduced the gap between hexagons horizontally */
    position: relative;
    z-index: 1;
    text-align: center;
    background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0)
    ),
    linear-gradient(to left, rgba(255, 255, 255, 0.2), rgba(179, 180, 179, 0));
    background-blend-mode: lighten;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1),
    0 1px 3px rgba(0, 0, 0, 0.08);
    border-radius: 25px;
    overflow: hidden;
    transform: rotate(-45.90deg); /* Rotate the hexagonal grid */
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    /* border: 1px solid rgb(69, 245, 0); For debugging reasons */
}

/* Adjusted hexagonal frame */
.hexagonal-frame {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    left: 17px;
    gap: 0px; /* Adjusted horizontal gap between hexagons */
    background: radial-gradient(circle, #0a0a0a27 0%, #00000054 20%, rgba(6, 93, 15, 0) 50%);
    margin: 0 auto;
    position: relative;
    z-index: 1;
    top: 0;
    transform: rotate(-60.05deg);
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
   /* border: 1px solid white; /* White border around hexagonal frame */
}

/* Row styles for tighter vertical spacing */
.row {
    display: flex;
    justify-content: center;
    gap: 1.1px; /* Keep horizontal gap minimal */
    margin-top: -15.5px; /* Apply negative margin to bring rows closer */
    margin-left: -9.5px; /* Adjust for horizontal alignment */
}

/* Remove additional bottom margin for hexagons in the first row */
.row:not(.second-row) .hex {
    margin-bottom: -24px; /* Apply a tighter bottom margin */
}

/* Adjust top and bottom margins for hexagons in the second row */
.row.second-row .hex {
    margin-top: -22px; /* Reduce top margin to tighten spacing */
    margin-bottom: 8px; /* Adjust bottom margin as needed */
}

/* Adjust the left margin between hexagons within a row */
.row:not(.second-row) .hex + .hex {
    margin-left: 3px; /* Adjust horizontal spacing as needed */
}

.hex {
    width: 127px;
    height: 151px;
    clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
    );
    padding: 11px;
    outline: 5px solid white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    will-change: transform, box-shadow;
    z-index: 3;
    position: relative;
    overflow: hidden;
    margin-left: -1px;
    margin-bottom: -22px;
    margin-top: -16.5px;
}

.hex::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 169px; /* Increase width by 10px */
    height: 198px; /* Increase height by 10px */
    background-image: url(../Images/Cube.png); 
    background-size: cover;
    background-position: center;
    transform: translate(-50%, -50%) rotate(59.7deg) scaleX(1.1) scaleY(1.03); /* Increased scaleX for more stretch */
    clip-path: polygon(-10% 0%, 100% 0%, 99% 98%, -10% 98%); /* Stretch bottom-left by more */
    z-index: -1; /* Place behind hex content */
}

.hex a {
    background: linear-gradient(to-right, #00e1ff, #1c05e9);  /* Gradient from cyan to purple */
    -webkit-background-clip: text;  /* Clip the background to the text */
    background-clip: text;  /* Standard support for text clipping */
    color: transparent;  /* Make the text color transparent, letting the background gradient show */
    
    right: -36px;
    top: -15px;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 11px;
    font-weight: bold;
    text-align: center;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    transform: rotate(60deg); /* Rotate the text */
    position: absolute; /* Position relative to .hex */
    width: 100%; /* Ensure full width of .hex for text */
    transform-origin: center center; /* Rotate around the center */
}

/* Hexagon hover effect */
.hex:hover {
    transform: translateY(-1px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    background-color: rgb(37, 3, 99);
}

/* Text color change on hover */
.hex:hover a {
    color: rgb(76, 0, 255); /* Change text color to green on hover */
    font-size: 11px;
}

/* Hexagon expanded state */
.hex.expanded {
    transform: scale(1.2);
}

/* Triangle at the bottom of the container */
.triangle {
    position: absolute;
    top:103%;
    bottom: 0; /* Position at the bottom */
    left: 52%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for horizontal centering */
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #ffffff; /* White triangle pointing downward */
    z-index: 2; /* Ensure it’s on top */
}

/* Overlay to extend the hover area */
.triangle-overlay {
    position: absolute;
    bottom: -20px; /* Extend below the triangle */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for horizontal centering */
    width: 40px; /* Extend size to cover padding area */
    height: 40px; /* Extend size to cover padding area */
    z-index: 1; /* Ensure it’s below the triangle but still covers the hover area */
}

/* Show footer when either the triangle or its overlay is hovered */
.outer-container:hover .footer,
.triangle:hover ~ .footer,
.triangle-overlay:hover ~ .footer {
    opacity: 1; /* Show footer */
}
.footer {
    position: fixed;
    bottom: 0;
    left: 2px;
    right: 0.6px;
    width: calc(100% - 2.6px);
    height: 36px;
    background: linear-gradient(to bottom, rgba(32, 32, 32, 0.8), rgba(32, 32, 32, 0.5) 70%, rgba(32, 32, 32, 0.8)); /* Fading effect from top to bottom */
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-left: 1px solid #000;
    border-right: 1px solid #000;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    border-bottom-left-radius: 8px; /* Increased radius for more cylindrical look */
    border-bottom-right-radius: 8px; /* Increased radius for more cylindrical look */
    z-index: 1;
    box-sizing: border-box;
    overflow: hidden;
}

.footer::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 8px; /* Height of the fade effect */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); /* Fade to transparent */
    border-bottom-left-radius: 18px; /* Consistent border radius */
    border-bottom-right-radius: 18px; /* Consistent border radius */
    z-index: -1; /* Place behind the footer content */
    pointer-events: none;
}

/* Add shiny glossy effect to the center section */
.footer::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 6px; /* Height of the glossy line */
    background: linear-gradient(to right, rgba(255, 255, 255, 0.5), rgba(180, 180, 180, 0.3), rgba(255, 255, 255, 0.5)); /* Glossy silver line */
    border-top-left-radius: 2px; /* Softly rounded edges */
    border-top-right-radius: 2px; /* Softly rounded edges */
    z-index: -1; /* Place behind the footer content */
    pointer-events: none;
}

.footer.visible {
    opacity: 1;
}

/* Glossy line on both sides */
.glossy-line::before,
.glossy-line::after {
    content: "";
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    transition: width 0.3s ease;
}

.glossy-line::before {
    left: 0;
    background: linear-gradient(to left bottom, rgba(0, 0, 0, 0.85), rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
    transition-delay: 0.15s;
}

.glossy-line::after {
    right: 0;
    background: linear-gradient(to right bottom, rgba(0, 0, 0, 0.85), rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
    transition-delay: 0.15s;
}

/* List styles inside footer */
.footer ul {
    list-style: none; /* Remove default list style */
    padding: 10px 30px; /* Adjusted padding for better spacing */
    margin: 0; /* Removed margin to prevent spacing issues */
    display: flex; /* Changed to flex for better alignment of items */
    justify-content: center; /* Center the list horizontally */
    align-items: center; /* Align list items vertically */
    line-height: 1.8; /* Increased line height for more vertical space between items */
}

.footer ul li {
    display: inline; /* Display inline */
    margin: 0 12px; /* Increased margin for spacing between list items */
}

.footer ul li a {
    text-decoration: none; /* Remove underline */
    color: #ffbb00; /* Text color */
    font-size: 14px; /* Font size */
    transition: color 0.3s ease; /* Smooth transition for text color */
}

.footer ul li a:hover {
    color: #ff9100 !important; /* Text color on hover */
}

/* Error message styles */
.error-message {
    display: inline-block;
    padding: 10px 20px;
    background-color: #f44336; /* Red background for visibility */
    border: 1px solid #bb160a;
    color: white; /* White text */
    position: fixed; /* Position fixed to handle layout properly */
    top: 50%; /* Vertically center */
    left: 50%; /* Horizontally center */
    transform: translate(-50%, -50%) rotate(59.7deg); /* Center the element and rotate */
    z-index: 1000; /* Ensure it appears on top */
    border-radius: 5px; /* Optional: Rounded corners */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Subtle shadow for better visibility */
    opacity: 0.9;
}
.modal {
    display: none;  /* Hidden by default */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);  /* Overlay */
    padding-top: 100px;
}
.modal-content {
    background-color: #fff;
    margin: 12.8% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 16px;
    width: 28%;
    max-height: 150px;
}
.button-container {
    pointer-events: auto; /* Ensure the buttons are clickable */
}

.modal-content {
    pointer-events: auto; /* Allow interactions inside the modal */
}

.button-container {
    display: flex;
    justify-content: space-around;
}
.button {
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
}
.button:hover {
    background-color: #45a049;
}


.modal h2{
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

.modal p{
    text-align: center;
    font-size: 16px;
}

.button-container {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
}

.button {
    padding: 8px 16px;
    margin: 8px;
    font-size: 14px;
    cursor: pointer;
    border-radius: 4px;
    background-color: #09a81e;
    color: white;
    transition: background-color 0.3s ease;
}

.button:hover {
    background-color: #077b13; /* Darker shade on hover */
}

.button:active {
    background-color: #065d0f; /* Even darker shade on click */
}

/*
    Button Styles
    .button {
        margin: 5px;
        padding: 10px 20px;
        cursor: pointer;
        border: none; Remove default border 
        border-radius: 5px; Rounded corners for buttons 
        font-size: 16px; Font size *
    }

    .button.redirectButton {
        background: #09a81e; Green background 
    }

    .button.openNewButton {
        background: #e73103; /* Red background *
    }

    .button.closeButton {
        background: #ffffff; /* White background 
        color: #000000; /* Change text color for contrast 
    }
*/
